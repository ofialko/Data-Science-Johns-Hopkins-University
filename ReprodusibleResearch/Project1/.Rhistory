geom_histogram(color='black', fill = 'lightblue',binwidth = 0.05) +
geom_vline(xintercept = median(x),size=1,color='red') +
xlab(xx)
ggplot(data=data.frame(x=resampledMedians) ,aes(x=x)) +
geom_histogram(color='black', fill = 'lightblue',binwidth = 0.05) +
geom_vline(xintercept = median(x),size=1,color='red') +
xlab('xx')
?mapply
rep(1,4)
mapply(rep, 1:4,1:4)
mapply(rep, 1:4,4:1)
noise <- function(n,mean,sd){
rnorm(n,mean,sd)
}
mapply(noise,1:5,2:3,3)
mapply(noise,1:5,1:5,3)
date()
d1=date()
print(d1)
class(d1)
d2 = Sys.Date()
d2
class(d2)
format(d2,"%a %b %d")
?format
x<-c("1jan1960","2jan1960"); z=as.Date(x,"%d%b%Y")
z
weekdays(d2)
months(d2)
julian(d2)
install.packages("lubridate")
library(lubridate)
ymd('20140108')
mdy('08042013')
mdy('08/04/2013')
dmy('05/05/2065')
ymd_hms(20160405205634)
date()
Sys.Date()
?Devices
pdf(file="myplot.pdf")
with(faithful,plot(eruptions,waiting))
title(main='Old Faithful Geyser data')
dev.off()
list.files()
file.edit('myplot.pdf')
library(swirl)
swirl()
pal <- colorRampPalette(cols)
showMe(pal(20))
image(volcano)
image(volcano,col=pal(20))
image(volcano,col=p1(20))
volcano
vol <- volcano
str(volcano)
class(volcano)
unique(vol)
?unique
dim(volcano)
dim(unique(volcano))
image(volcano)
class(p1(20))
p1(20)
class(p1(20),col=p1(20))
image(volcano,col=p1(20))
image(volcano,col=p1(10))
image(volcano,col=p1(1))
image(volcano,col=p1(2))
image(volcano,col=p1(4))
image(volcano,col=p1(40))
image(volcano,col=p1(100))
image(volcano,col=p2(100))
image(volcano,col=pal(100))
image(volcano,col=pal(1000))
image(volcano,col=pal(100))
image(volcano,col=pal(50))
image(volcano,col=pal(20))
image(volcano,col=pal(200))
palet <- p1(20)
palet
library(swirl)
swirl()
str(mpg)
qplot(displ,hwy,mpg)
qplot(displ,hwy,data =  mpg)
qplot(displ,hwy,data =  mpg,aes(color=drv))
qplot(displ,hwy,data =  mpg,color=drv)
qplot(displ,hwy,data =  mpg,color=drv,geom=c('point','smooth'))
qplot(hwy,data =  mpg,color=drv)
qplot(y=hwy,data =  mpg,color=drv)
myhigh
qplot(drv,hwy, data =  mpg,geom='boxplot')
qplot(drv,hwy, data =  mpg,geom='boxplot',color=manufacturer)
qplot(hwy,data = mpg,fill=drv)
qplot(displt,hwy, data=mpg,factes = .~drv)
qplot(displt,hwy, data=mpg,facets = .~drv)
qplot(displ,hwy, data=mpg,facets = .~drv)
qplot(hwy,data = mpg,facets = drv~.,binwidth=2)
qplot(displ,hwy,data = mpg,geom=c('point','smooth'),facets = .~drv)
g<-ggplot(mpg,aes(displ,hwy))
summary(g)
g+geom_point()
g+geom_point()+geom_smooth()
g+geom_point()+geom_smooth(method = 'lm')
g+geom_point()+geom_smooth(method = 'lm')+facet_grid(.~drv)
g+geom_point()+geom_smooth(method = 'lm')+facet_grid(.~drv)+ggtitle("Swirl Rules!")
g+geom_point()
g+geom_point(color='pink',size=4,alpha=1/2)
g+geom_point(size=4,alpha=1/2,aes(color=drv))
g+geom_point(size=4,alpha=1/2,aes(color=drv))+labs(title='Swirl Rules!')+labs(x='Displacement',y='Hwy Mileage')
g+geom_point(aes(color=drv))+labs(title='Swirl Rules!')+labs(x='Displacement',y='Hwy Mileage')
g+geom_point(aes(color=drv),size=2alpha=1/2) + geom_smooth(size=4,linetype=3,method='lm',se=FALSE)
g+geom_point(aes(color=drv),size=,alpha=1/2) + geom_smooth(size=4,linetype=3,method='lm',se=FALSE)
g+geom_point(aes(color=drv),size=2,alpha=1/2) + geom_smooth(size=4,linetype=3,method='lm',se=FALSE)
g+geom_point(aes(color=drv))+theme_bw(base_family = "Times")
plot(myx,myy,type = 'l',ylim = c(-3,3))
g<-ggplot(testdat,aes(x=myx,y=myy))
g+geom_line()
g+geom_line()+ylim(-3,3)
g+geom_line()+coord_cartesian(ylim = c(-3,3))
g<-ggplot(mpg,aes(x=displ,y=hwy),color=factor(yesr))
g<-ggplot(mpg,aes(x=displ,y=hwy,color=factor(yesr)))
g<-ggplot(mpg,aes(x=displ,y=hwy,color=factor(year)))
g+geom_point()
g+geom_point()+facet_grid(drv~cyl,margins = TRUE)
g+geom_point()+facet_grid(drv~cyl,margins = TRUE)+geom_smooth(method = 'lm',se=FALSE,size=2,color='black')
g+geom_point()+facet_grid(drv~cyl,margins = TRUE)+geom_smooth(method = 'lm',se=FALSE,size=2,color='black')+labs(x='Displacement',y='Highway Mileage',title='Swirl Rules!')
library(swirl)
swirl()
str(diamonds)
qplot(price,data = diamonds)
range(diamonds$price)
qplot(price,data = diamonds,binwidth = 18497/30)
brk
counts
qplot(price,data = diamonds,binwidth = 18497/30,fill = cut)
qplot(price,data = diamonds,geom='density')
qplot(price,data = diamonds,geom='density',color='cut')
qplot(price,data = diamonds,geom='density',color=cut)
qplot(carat,price,data = diamonds)
qplot(carat,price,data = diamonds,shape=cut)
qplot(carat,price,data = diamonds,color=cut)
qplot(carat,price,data = diamonds,color=cut)+geom_smooth(method='lm')
qplot(carat,price,data = diamonds,color=cut,facets = .~cut)+geom_smooth(method='lm')
g<-ggplot(data = diamonds,aes(x=depth,y=price))
summary(g)
g+geom_point(alpha=1/3)
cutpoints <- quantile(diamonds$carat,seq(0,1,length.out = 4),na.rm = TRUE)
cutpoints
diamonds$car2 <- cut(diamonds$carat,breaks = cutpoints)
g<-ggplot(data = diamonds,aes(x=depth,y=price))
g+geom_point(alpha=1/3)+facet_grid(cut ~ car2)
diamonds[myd,]
g+geom_point(alpha=1/3)+facet_grid(cut ~ car2)+geom_smooth(method='lm',size=3,color='pink')
ggplot(diamonds,aes(carat,price)) + geom_boxplot() + facet_grid(.~cut)
ggplot(diamonds,aes(carat,price)) + geom_boxplot() + facet_grid(.~cut)
ggplot(diamonds,aes(carat,price,color='red')) + geom_boxplot() + facet_grid(.~cut)
ggplot(diamonds,aes(carat,price,color='red',fill='green')) + geom_boxplot() + facet_grid(.~cut)
ggplot(diamonds,aes(carat,price)) + geom_boxplot(color='green') + facet_grid(.~cut)
ggplot(diamonds,aes(carat,price)) + geom_boxplot(fill='green') + facet_grid(.~cut)
version
install.packages('rmarkdown')
setwd('Dropbox/Proggraming Studies/R-L/')
install.packages("leaflet")
install.packages("dplyr")
library(leaflet)
library(dplyr)
# Chunk 1
library(leaflet)
library(dplyr)
# Chunk 2
leaflet()
install.packages("KernSmooth")
library(KernSmooth)
setwd('ReprodusibleResearch/')
list.files()
list.files()
list.files()
setwd('Project1/')
list.files()
file.create('project.R')
file.edit('project.R')
?Date
?as.Date
steps_day <- tapply(activity$steps, activity$date, sum,na.rm=T)
?sum
?hist
hist(steps_day,breaks = 6,main='Total number of steps taken per day',xlab='')
24*60
24*60/5
activity <- read.csv('activity.csv',header = T,na.strings = 'NA')
str(activity)
daily_activity <- tapply(activity$steps, activity$interval, mean,na.rm=T)
interval <- names(daily_activity)
plot(interval,daily_activity,type='l',)
interval
2355/5
24*60/5
myts <- ts(interval,)
myts <- ts(interval,start = 0,end = )
24*60
myts <- ts(interval,start = 0,end = 1440,frequency = 12)
myts
myts <- ts(interval,start = 0,end = 1440,frequency = 1)
myts <- ts(interval,start = 0,end = 1440,frequency = 1)
myts
interval
daily_activity
interval
length(activity)
length(interval)
5*(1:288)
5*(1:288)/60
activity <- transform(activity,date = as.Date(date,"%Y-%m-%d"),interval=as.factor(interval))
str(activity)
interval
interval
is.na(c(NA,1,2,3))
any(is.na(c(NA,1,2,3))
)
dim(activity)
sum(is.na(activity$steps))
daily_activity
activity$steps
daily_activity[1]
daily_activity$0
daily_activity['0']
daily_activity['5']
daily_activity['15']
View(activity)
length(daily_activity)
dim(activity)
17568/288
activity$steps_imputed <- rep(daily_activity,61)
dim(activity$steps)
class(activity$steps)
activity$steps
?sapply
activity[1,]
activity[1,]['steps']
activity[1,]
activity[1,]['steps']
activity[1,]['steps']==NA
activity[1,]['steps']=='NA'
activity[1,]['steps']
activity[1,]['steps'][1]
activity[1,]['steps'][1]==NA
activity[1,]['steps']
is.na(activity[1,]['steps'])
activity_new <- activity
activity_new$steps <- apply(activity,1,function(x)
ifelse(is.na(x['steps']),daily_activity[x['interval']],x['steps']))
activity <- read.csv('activity.csv',header = T,na.strings = 'NA')
str(activity)
activity <- transform(activity,date = as.Date(date,"%Y-%m-%d"),interval=as.factor(interval))
str(activity)
activity_new <- activity
activity_new$steps <- apply(activity,1,function(x)
ifelse(is.na(x['steps']),daily_activity[x['interval']],x['steps']))
View(activity_new)
daily_activity
sum(is.na(activity$steps))
sum(is.na(activity$date))
sum(is.na(activity$interval))
steps_day_new <- tapply(activity_new$steps, activity_new$date, sum,na.rm=TRUE)
hist(steps_day_new,breaks = 8,main='Total number of steps taken per day',xlab='',col='red')
steps_day_new <- tapply(activity_new$steps, activity_new$date, sum,na.rm=TRUE)
str(activity_new)
steps_day <- tapply(activity$steps, as.factor(activity$date), sum,na.rm=TRUE)
activity <- read.csv('activity.csv',header = T,na.strings = 'NA')
str(activity)
activity <- transform(activity,date = as.Date(date,"%Y-%m-%d"),interval=as.factor(interval))
str(activity)
steps_day <- tapply(activity$steps, as.factor(activity$date), sum,na.rm=TRUE)
hist(steps_day,breaks = 8,
main='Total number of steps taken per day',xlab='',col='red')
num <- apply(activity, 1, function(x) any(is.na(x)))
sum(num)
activity_new <- activity
activity_new$steps <- apply(activity,1,function(x)
ifelse(is.na(x['steps']),daily_activity[x['interval']],x['steps']))
activity_new$steps <- as.numeric(activity_new$steps)
steps_day_new <- tapply(activity_new$steps, as.factor(activity_new$date), sum,na.rm=TRUE)
hist(steps_day_new,breaks = 8,
main='Total number of steps taken per day',xlab='',col='red')
steps_day
steps_day_new
weekdays(activity$date[1])
weekdays(activity$date[6])
weekdays(activity$date[8])
weekdays(activity$date[800])
weekdays(activity$date[800])
Weekends <- c('Saturday','Sunday')
activity_new$weekday <- apply(activity_new,MARGIN = 1, function(x)
ifelse(weekdays(x['date']) %in% Weekends,'weekend','weekday'))
weekdays(activity[1,])
weekdays(activity[1,]['date'])
activity[1,]['date']
activity[1,]['date'][1,]
activity[1,]['date'][1]
weekdays(activity[1,]['date'])
weekdays(activity[1,]['date'][1])
weekdays(activity[1,]['date'][1,])
Weekends <- c('Saturday','Sunday')
activity_new$weekday <- apply(activity_new,MARGIN = 1, function(x)
ifelse(weekdays(x['date'][1,]) %in% Weekends,'weekend','weekday'))
weekdays(activity_new[1,]['date'][1,])
activity_new[1,]
activity_new[1,][1,]
Weekends <- c('Saturday','Sunday')
activity_new$weekday <- apply(activity_new,MARGIN = 1, function(x)
ifelse(weekdays(x['date'][1,]) %in% Weekends,'weekend','weekday'))
Weekends <- c('Saturday','Sunday')
activity_new$weekday <- apply(activity_new,MARGIN = 1, function(x)
ifelse(weekdays(x['date'][1]) %in% Weekends,'weekend','weekday'))
activity_new[3,]
activity_new[3,]['date']
activity_new[3,]['date'][1]
activity_new[3,]['date'][2]
activity_new[3,]['date'][,1]
activity_new[3,]['date'][1,]
activity_new[3,]['date']
activity_new[3,]$date
activity_new[3,]$date
Weekends <- c('Saturday','Sunday')
activity_new$weekday <- apply(activity_new,MARGIN = 1, function(x)
ifelse(weekdays(x$date) %in% Weekends,'weekend','weekday'))
?apply
Weekends <- c('Saturday','Sunday')
activity_new$weekday <- apply(activity_new,MARGIN = 1, function(x)
ifelse(weekdays(x['date']) %in% Weekends,'weekend','weekday'))
Weekends <- c('Saturday','Sunday')
activity_new$weekday <- apply(activity_new,MARGIN = 1, function(x)
ifelse(weekdays(x[2]) %in% Weekends,'weekend','weekday'))
Weekends <- c('Saturday','Sunday')
activity_new$weekday <- apply(activity_new,MARGIN = 1, function(x)
ifelse(weekdays(as.Date(x['date'])) %in% Weekends,'weekend','weekday'))
weekdays(activity_new[1,]$date)
weekdays(activity_new[3782,]$date)
activity_new_weekends <- subset(activity_new,weekday == 'weekend')
activity_new_weekdays <- subset(activity_new,weekday == 'weekday')
View(activity_new_weekdays)
View(activity_new_weekends)
daily_activity_weekends <- tapply(activity_new_weekends$steps, activity_new_weekends$interval, mean,na.rm=T)
daily_activity_weekdays <- tapply(activity_new_weekdays$steps, activity_new_weekdays$interval, mean,na.rm=T)
library(lattice)
daily_activity_weekdays
length(daily_activity_weekdays)
length(daily_activity_weekends)
daily_activity_weekends <- tapply(activity_new_weekends$steps, activity_new_weekends$interval, mean,na.rm=T)
daily_activity_weekdays <- tapply(activity_new_weekdays$steps, activity_new_weekdays$interval, mean,na.rm=T)
df <- data.frame(interval = interval,daily_activity = c(daily_activity_weekdays,daily_activity_weekends),weekday = c(rep('weekday',288),rep('weekend',288)))
library(lattice)
View(df)
?xyplot
str(df)
View(df)
daily_activity_weekends <- tapply(activity_new_weekends$steps, activity_new_weekends$interval, mean,na.rm=T)
daily_activity_weekdays <- tapply(activity_new_weekdays$steps, activity_new_weekdays$interval, mean,na.rm=T)
df <- data.frame(interval = interval,daily_activity = c(daily_activity_weekdays,daily_activity_weekends),weekday = c(rep('weekday',288),rep('weekend',288)))
library(lattice)
xyplot(daily_activity ~ interval | weekday,data=df,xlab = 'Interval',ylab='Number of steps',lty=1)
daily_activity_weekends <- tapply(activity_new_weekends$steps, activity_new_weekends$interval, mean,na.rm=T)
daily_activity_weekdays <- tapply(activity_new_weekdays$steps, activity_new_weekdays$interval, mean,na.rm=T)
df <- data.frame(interval = interval,daily_activity = c(daily_activity_weekdays,daily_activity_weekends),weekday = c(rep('weekday',288),rep('weekend',288)))
library(lattice)
xyplot(daily_activity ~ interval | weekday,data=df,xlab = 'Interval',ylab='Number of steps',lty='l')
daily_activity_weekends <- tapply(activity_new_weekends$steps, activity_new_weekends$interval, mean,na.rm=T)
daily_activity_weekdays <- tapply(activity_new_weekdays$steps, activity_new_weekdays$interval, mean,na.rm=T)
df <- data.frame(interval = interval,daily_activity = c(daily_activity_weekdays,daily_activity_weekends),weekday = c(rep('weekday',288),rep('weekend',288)))
library(lattice)
xyplot(daily_activity ~ interval | weekday,data=df,xlab = 'Interval',ylab='Number of steps',layout=c(2,1))
daily_activity_weekends <- tapply(activity_new_weekends$steps, activity_new_weekends$interval, mean,na.rm=T)
daily_activity_weekdays <- tapply(activity_new_weekdays$steps, activity_new_weekdays$interval, mean,na.rm=T)
df <- data.frame(interval = interval,daily_activity = c(daily_activity_weekdays,daily_activity_weekends),weekday = c(rep('weekday',288),rep('weekend',288)))
library(lattice)
xyplot(daily_activity ~ interval | weekday,data=df,xlab = 'Interval',ylab='Number of steps',layout=c(2,1))
daily_activity_weekends <- tapply(activity_new_weekends$steps, activity_new_weekends$interval, mean,na.rm=T)
daily_activity_weekdays <- tapply(activity_new_weekdays$steps, activity_new_weekdays$interval, mean,na.rm=T)
df <- data.frame(interval = interval,daily_activity = c(daily_activity_weekdays,daily_activity_weekends),weekday = c(rep('weekday',288),rep('weekend',288)))
library(lattice)
xyplot(daily_activity ~ interval | weekday,data=df,xlab = 'Interval',
ylab='Number of steps',layout=c(2,1))
daily_activity_weekends <- tapply(activity_new_weekends$steps, activity_new_weekends$interval, mean,na.rm=T)
daily_activity_weekdays <- tapply(activity_new_weekdays$steps, activity_new_weekdays$interval, mean,na.rm=T)
df <- data.frame(interval = interval,daily_activity = c(daily_activity_weekdays,daily_activity_weekends),weekday = c(rep('weekday',288),rep('weekend',288)))
library(lattice)
xyplot(daily_activity ~ interval | weekday,data=df,xlab = 'Interval',
ylab='Number of steps',layout=c(1,2))
daily_activity_weekends <- tapply(activity_new_weekends$steps,
activity_new_weekends$interval, mean,na.rm=T)
daily_activity_weekdays <- tapply(activity_new_weekdays$steps,
activity_new_weekdays$interval, mean,na.rm=T)
plot(interval,daily_activity_weekdays,type='l',xlab = '5-minute interval',ylab='Average number of steps',main='Average Daily Activity')
df <- data.frame(interval = interval,daily_activity = c(daily_activity_weekdays,daily_activity_weekends),weekday = c(rep('weekday',288),rep('weekend',288)))
library(lattice)
xyplot(daily_activity ~ interval | weekday,data=df,xlab = 'Interval',
ylab='Number of steps',layout=c(1,2))
daily_activity_weekends <- tapply(activity_new_weekends$steps,
activity_new_weekends$interval, mean,na.rm=T)
daily_activity_weekdays <- tapply(activity_new_weekdays$steps,
activity_new_weekdays$interval, mean,na.rm=T)
plot(interval,daily_activity_weekdays,type='l',xlab = '5-minute interval',ylab='Average number of steps',main='Average Daily Activity')
df <- data.frame(interval = rep(interval,2),daily_activity = c(daily_activity_weekdays,daily_activity_weekends),weekday = c(rep('weekday',288),rep('weekend',288)))
library(lattice)
xyplot(daily_activity ~ interval | weekday,data=df,xlab = 'Interval',
ylab='Number of steps',layout=c(1,2))
daily_activity_weekends <- tapply(activity_new_weekends$steps,
activity_new_weekends$interval, mean,na.rm=T)
daily_activity_weekdays <- tapply(activity_new_weekdays$steps,
activity_new_weekdays$interval, mean,na.rm=T)
plot(interval,daily_activity_weekdays,type='l',xlab = '5-minute interval',ylab='Average number of steps',main='Average Daily Activity')
plot(interval,daily_activity_weekends,type='l',xlab = '5-minute interval',ylab='Average number of steps',main='Average Daily Activity')
df <- data.frame(interval = rep(interval,2),daily_activity = c(daily_activity_weekdays,daily_activity_weekends),weekday = c(rep('weekday',288),rep('weekend',288)))
library(lattice)
xyplot(daily_activity ~ interval | weekday,data=df,xlab = 'Interval',
ylab='Number of steps',layout=c(1,2))
daily_activity_weekends <- tapply(activity_new_weekends$steps,
activity_new_weekends$interval, mean,na.rm=T)
daily_activity_weekdays <- tapply(activity_new_weekdays$steps,
activity_new_weekdays$interval, mean,na.rm=T)
plot(interval,daily_activity_weekdays,type='l',xlab = '5-minute interval',ylab='Average number of steps',main='Average Daily Activity')
plot(interval,daily_activity_weekends,type='l',xlab = '5-minute interval',ylab='Average number of steps',main='Average Daily Activity')
df <- data.frame(interval = rep(interval,2),daily_activity = c(daily_activity_weekdays,daily_activity_weekends),weekday = c(rep('weekday',288),rep('weekend',288)))
library(lattice)
xyplot(daily_activity ~ interval | weekday,data=df,xlab = 'Interval',
ylab='Number of steps',layout=c(1,2))
str(df)
daily_activity_weekends <- tapply(activity_new_weekends$steps,
activity_new_weekends$interval, mean,na.rm=T)
daily_activity_weekdays <- tapply(activity_new_weekdays$steps,
activity_new_weekdays$interval, mean,na.rm=T)
plot(interval,daily_activity_weekdays,type='l',xlab = '5-minute interval',ylab='Average number of steps',main='Average Daily Activity')
plot(interval,daily_activity_weekends,type='l',xlab = '5-minute interval',ylab='Average number of steps',main='Average Daily Activity')
df <- data.frame(interval = as.integer(rep(interval,2)),daily_activity = c(daily_activity_weekdays,daily_activity_weekends),weekday = c(rep('weekday',288),rep('weekend',288)))
library(lattice)
xyplot(daily_activity ~ interval | weekday,data=df,xlab = 'Interval',
ylab='Number of steps',layout=c(1,2))
daily_activity_weekends <- tapply(activity_new_weekends$steps,
activity_new_weekends$interval, mean,na.rm=T)
daily_activity_weekdays <- tapply(activity_new_weekdays$steps,
activity_new_weekdays$interval, mean,na.rm=T)
plot(interval,daily_activity_weekdays,type='l',xlab = '5-minute interval',ylab='Average number of steps',main='Average Daily Activity')
plot(interval,daily_activity_weekends,type='l',xlab = '5-minute interval',ylab='Average number of steps',main='Average Daily Activity')
df <- data.frame(interval = as.integer(rep(interval,2)),daily_activity = c(daily_activity_weekdays,daily_activity_weekends),weekday = c(rep('weekday',288),rep('weekend',288)))
library(lattice)
xyplot(daily_activity ~ interval | weekday,data=df,xlab = 'Interval',
ylab='Number of steps',layout=c(1,2),lty='l')
daily_activity_weekends <- tapply(activity_new_weekends$steps,
activity_new_weekends$interval, mean,na.rm=T)
daily_activity_weekdays <- tapply(activity_new_weekdays$steps,
activity_new_weekdays$interval, mean,na.rm=T)
plot(interval,daily_activity_weekdays,type='l',xlab = '5-minute interval',ylab='Average number of steps',main='Average Daily Activity')
plot(interval,daily_activity_weekends,type='l',xlab = '5-minute interval',ylab='Average number of steps',main='Average Daily Activity')
df <- data.frame(interval = as.integer(rep(interval,2)),daily_activity = c(daily_activity_weekdays,daily_activity_weekends),weekday = c(rep('weekday',288),rep('weekend',288)))
library(lattice)
xyplot(daily_activity ~ interval | weekday,data=df,xlab = 'Interval',
ylab='Number of steps',layout=c(1,2),key.lty='l')
daily_activity_weekends <- tapply(activity_new_weekends$steps,
activity_new_weekends$interval, mean,na.rm=T)
daily_activity_weekdays <- tapply(activity_new_weekdays$steps,
activity_new_weekdays$interval, mean,na.rm=T)
plot(interval,daily_activity_weekdays,type='l',xlab = '5-minute interval',ylab='Average number of steps',main='Average Daily Activity')
plot(interval,daily_activity_weekends,type='l',xlab = '5-minute interval',ylab='Average number of steps',main='Average Daily Activity')
df <- data.frame(interval = as.integer(rep(interval,2)),daily_activity = c(daily_activity_weekdays,daily_activity_weekends),weekday = c(rep('weekday',288),rep('weekend',288)))
library(lattice)
xyplot(daily_activity ~ interval | weekday,data=df,xlab = 'Interval',
ylab='Number of steps',layout=c(1,2),lines.lty=1)
daily_activity_weekends <- tapply(activity_new_weekends$steps,
activity_new_weekends$interval, mean,na.rm=T)
daily_activity_weekdays <- tapply(activity_new_weekdays$steps,
activity_new_weekdays$interval, mean,na.rm=T)
plot(interval,daily_activity_weekdays,type='l',xlab = '5-minute interval',ylab='Average number of steps',main='Average Daily Activity')
plot(interval,daily_activity_weekends,type='l',xlab = '5-minute interval',ylab='Average number of steps',main='Average Daily Activity')
df <- data.frame(interval = as.integer(rep(interval,2)),daily_activity = c(daily_activity_weekdays,daily_activity_weekends),weekday = c(rep('weekday',288),rep('weekend',288)))
library(lattice)
xyplot(daily_activity ~ interval | weekday,data=df,xlab = 'Interval',
ylab='Number of steps',layout=c(1,2),lines.lty=l)
daily_activity_weekends <- tapply(activity_new_weekends$steps,
activity_new_weekends$interval, mean,na.rm=T)
daily_activity_weekdays <- tapply(activity_new_weekdays$steps,
activity_new_weekdays$interval, mean,na.rm=T)
plot(interval,daily_activity_weekdays,type='l',xlab = '5-minute interval',ylab='Average number of steps',main='Average Daily Activity')
plot(interval,daily_activity_weekends,type='l',xlab = '5-minute interval',ylab='Average number of steps',main='Average Daily Activity')
df <- data.frame(interval = as.integer(rep(interval,2)),daily_activity = c(daily_activity_weekdays,daily_activity_weekends),weekday = c(rep('weekday',288),rep('weekend',288)))
library(lattice)
xyplot(daily_activity ~ interval | weekday,data=df,xlab = 'Interval',
ylab='Number of steps',layout=c(1,2),lines.lty=1)
daily_activity_weekends <- tapply(activity_new_weekends$steps,
activity_new_weekends$interval, mean,na.rm=T)
daily_activity_weekdays <- tapply(activity_new_weekdays$steps,
activity_new_weekdays$interval, mean,na.rm=T)
plot(interval,daily_activity_weekdays,type='l',xlab = '5-minute interval',ylab='Average number of steps',main='Average Daily Activity')
plot(interval,daily_activity_weekends,type='l',xlab = '5-minute interval',ylab='Average number of steps',main='Average Daily Activity')
df <- data.frame(interval = as.integer(rep(interval,2)),daily_activity = c(daily_activity_weekdays,daily_activity_weekends),weekday = c(rep('weekday',288),rep('weekend',288)))
library(lattice)
xyplot(daily_activity ~ interval | weekday,data=df,xlab = 'Interval',
ylab='Number of steps',layout=c(1,2),type='l')
daily_activity_weekends <- tapply(activity_new_weekends$steps,
activity_new_weekends$interval, mean,na.rm=T)
daily_activity_weekdays <- tapply(activity_new_weekdays$steps,
activity_new_weekdays$interval, mean,na.rm=T)
plot(interval,daily_activity_weekdays,type='l',xlab = '5-minute interval',ylab='Average number of steps',main='Average Daily Activity')
plot(interval,daily_activity_weekends,type='l',xlab = '5-minute interval',ylab='Average number of steps',main='Average Daily Activity')
df <- data.frame(interval = as.integer(rep(interval,2)),daily_activity = c(daily_activity_weekdays,daily_activity_weekends),weekday = c(rep('weekday',288),rep('weekend',288)))
library(lattice)
xyplot(daily_activity ~ interval | weekday,data=df,xlab = 'Interval',
ylab='Number of steps',layout=c(1,2),type='l',col='black')
library(knitr)
knit2html('PL1.Rmd')
file.edit('PL1.Rmd')

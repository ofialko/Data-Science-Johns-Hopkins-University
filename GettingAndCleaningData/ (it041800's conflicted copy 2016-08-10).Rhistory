geom_histogram(aes(x = B),color = 'blue')
v = sample(1:6,100*n,replace = T)
A = matrix(data = v, nrow = n, byrow = F)
B = apply(A-3.5,MARGIN = 1,mean)
ggplot()+
geom_histogram(aes(x = B),color = 'blue')
v = sample(1:6,100*n,replace = T)
A = matrix(data = v, nrow = n, byrow = F)
B = apply(A-3.5,MARGIN = 1,mean)
ggplot()+
geom_histogram(aes(x = B),color = 'blue')
library(UsingR)
data("father.son")
x<-father.son$sheight
(mean(x) + c(-1,1)*qnorm(0.975)*sd(x)/sqrt(length(x)))/12
n <- 20
pvals <- seq(0.1,0.9, by = 0.05)
nosim <- 1000
?rbinom
rbinom(1000,prob = 0.5,size = 20)
rbinom(1000,prob = 0.5,size = 20)/20
n <- 20
pvals <- seq(0.1,0.9, by = 0.05)
nosim <- 1000
coverage <- sapply(pvals, function(p){
phats <- rbinom(n = nosim, size = n,prob = p)/n
ll <- phats - qnorm(0.975)*sqrt(phats*(1-phats)/n)
ul <- phats + qnorm(0.975)*sqrt(phats*(1-phats)/n)
return(mean(ll<p & ul > p))
})
qplot(x=pvals,y = coverage)
qplot(x=pvals,y = coverage,geom = 'line')
n <- 20
pvals <- seq(0.1,0.9, by = 0.05)
nosim <- 1000
coverage <- sapply(pvals, function(p){
phats <- rbinom(n = nosim, size = n,prob = p)/n
ll <- phats - qnorm(0.975)*sqrt(phats*(1-phats)/n)
ul <- phats + qnorm(0.975)*sqrt(phats*(1-phats)/n)
return(mean(ll<p & ul > p))
})
qplot(x=pvals,y = coverage,geom = 'line')
n <- 100
pvals <- seq(0.1,0.9, by = 0.05)
nosim <- 1000
coverage <- sapply(pvals, function(p){
phats <- rbinom(n = nosim, size = n,prob = p)/n
ll <- phats - qnorm(0.975)*sqrt(phats*(1-phats)/n)
ul <- phats + qnorm(0.975)*sqrt(phats*(1-phats)/n)
return(mean(ll<p & ul > p))
})
qplot(x=pvals,y = coverage,geom = 'line')
qplot(x=pvals,y = coverage,geom = 'line',ylim = c(0.4,1))
qplot(x=pvals,y = coverage,geom = 'line',ylim = c(0.7,1))
qplot(x=pvals,0.95)
qplot(x=pvals,y = coverage,geom = 'line',ylim = c(0.7,1)) +
qplot(x=pvals,0.95)
ggplot() +
qplot(x=pvals,y = coverage,geom = 'line',ylim = c(0.7,1)) +
qplot(x=pvals,0.95)
qplot(x=pvals,y = coverage,geom = 'line',ylim = c(0.7,1)) +
qplot(x=pvals,0.95)
qplot(x=pvals,y = coverage,geom = 'line',ylim = c(0.7,1))
qplot(x=pvals,0.95)
n <- 100
pvals <- seq(0.1,0.9, by = 0.05)
nosim <- 1000
coverage <- sapply(pvals, function(p){
phats <- (rbinom(n = nosim, size = n,prob = p)+2)/(n+4)
ll <- phats - qnorm(0.975)*sqrt(phats*(1-phats)/n)
ul <- phats + qnorm(0.975)*sqrt(phats*(1-phats)/n)
return(mean(ll<p & ul > p))
})
qplot(x=pvals,y = coverage,geom = 'line',ylim = c(0.7,1))
library(swirl)
swirl()
coinPlot(n = 10)
coinPlot(n = 10000)
qnorm(0.95)
0.6 + c(-1,1)*qnorm(0.975)*sqrt(0.6*(1-0.6)/100)
binom.test(60,100)
binom.test(60,100)$con f.int
binom.test(60,100)$conf.int
mywald(0.2)
ACCompar(20)
lamb = 5/94.32
lamb <- 5/94.32
lamb + c(-1,1)*qnorm(.975)*sqrt(lamb/94.32)
poisson.test(5,94.32)$conf
data("sleep")
head(sleep)
g1 <- sleep$extra[1:10]
g2 <- sleep$extra[11:20]
diff <- g2 - g1
mn <- mean(diff)
s <- sd(diff)
n<-10
mn + c(-1,1)*qt(.975,n-1) * s/ sqrt(n)
t.test(diff)
mn + c(-1,1)*qt(.975,n-1) * s/ sqrt(n)
t.test(diff)
mn
sleep$extra
sleep$extra
View(sleep)
data("sleep")
head(sleep)
g1 <- sleep$extra[1:10]
g2 <- sleep$extra[11:20]
diff <- g2 - g1
library(ggplot2)
qplot(diff)
mn <- mean(x = sleep$ID[1:10], y = diff)
mn <- mean(x = sleep$ID[1:10], y = diff)
qplot(x = sleep$ID[1:10], y = diff)
qplot(x = sleep$ID[1:10], y = diff, geom = 'lines')
qplot(x = sleep$ID[1:10], y = diff, geom = 'line')
qplot(x = sleep$ID[1:10], y = diff, geom = 'line')
qplot(x = sleep$ID[1:10], y = diff, geom = 'l')
?qplot
qplot(x = sleep$ID[1:10], y = diff, geom = 'lines')
qplot(x = sleep$ID[1:10], y = diff, geom = 'curve')
qplot(x = sleep$ID[1:10], y = diff, geom = 'curve')
qplot(x = sleep$ID[1:10], y = diff)
mn <- mean(diff); s <- sd(diff)
n<-10
mn + c(-1,1)*qt(.975,n-1) * s/ sqrt(n)
test <- t.test(diff)
test$conf.int
test2 <- t.test(g2,g1,paired = T)
test2$conf.int
library(datasets)
data("ChickWeight")
library(reshape2)
View(ChickWeight)
wideCW <- dcast(ChickWeight,Diet + Chick ~ Time, value.var = "weight")
View(wideCW)
names(wideCW)[-(1:2)] <- paste("time",names(wideCW)[-(1:2)],sep = "")
wideCW14 <- subset(wideCW,Diet %in% c(1,4))
View(wideCW14)
?qplot
qplot(x = sleep$ID[1:10], y = diff,geom='path')
qplot(x = sleep$ID[1:10], y = diff,geom='line')
sleep$ID[1:10]
qplot(x = as.numeric(sleep$ID[1:10]), y = diff, geom='line')
library(UsingR)
t.test(father.son$sheight - father.son$fheight)
t.test(father.son$sheight, father.son$fheight, paired = T)
length(father.son)
str(father.son)
library(datasets)
data("ChickWeight")
1/8
library(swirl)
View(ChickWeight)
swirl()
10/sqrt(100)
(32-30)/1
2/10*4
15
qt(.95,15)
dim(fs)
t.test(fs$sheight,fs$fheight,paired = TRUE)
11.7885 * sd(fs$sheight-fs$fheight)/sqrt(1078)
mybin
8
?pbinom
ppois(9,5)
ppois(9,5,lower.tail = F)
library(swirl)
swirl()
pt(q=2.5,df = 15,lower.tail = FALSE)
qnorm(.95)
qnorm(.99)
pnorm(q=2)
pnorm(q=2,lower.tail = FALSE)
mybin
pbinom(q=6,size = 8,prob = .5,lower.tail = FALSE)
pbinom(q=6,size = 8,prob = .5,lower.tail = TRUE)
pbinom(q=7,size = 8,prob = .5,lower.tail = TRUE)
ppois(q=9,lambda = 5,lower.tail = FALSE)
load("~/Dropbox/R-L/Kaddle/Titatnic/.RData")
indx <- which(data.combined$Ticket == 'PC 17755' |
data.combined$Ticket == 'PC 17611' |
data.combined$Ticket == '113760'  )
View(data.combined[indx,])
library(ggplot2)
ggplot(frs.mr.df,aes(x=Fare, fill = Survived)) +
geom_density(alpha = 0.5)
indx <- which(data.combined$new.title == 'Mr.' & data.combined$Pclass == '1')
summary(data.combined[indx,])
frs.mr.df<-data.combined[indx,]
frs.mr.df[frs.mr.df$Sex == 'female',]
indx <- which(data.combined$new.title == 'Mr.' & data.combined$Sex == 'female')
data.combined$new.title[indx] <- 'Mrs.'
indx <- which(data.combined$new.title == 'Mr.' & data.combined$Pclass == '1')
frs.mr.df <- data.combined[indx,]
indx <- which(data.combined$Ticket == 'PC 17755' |
data.combined$Ticket == 'PC 17611' |
data.combined$Ticket == '113760'  )
View(data.combined[indx,])
ggplot(frs.mr.df,aes(x=Fare, fill = Survived)) +
geom_density(alpha = 0.5)
frs.mr.df
library(stringi)
table(data.combined$Titles)
name.splits <- stri_split(data.combined$Name,fixed = ',')
last.names <- sapply(name.splits, '[',1)
data.combined$last.name <- last.names
name.splits <- stri_split(sapply(name.splits,'[',2),fixed = " ")
Titles <- sapply(name.splits, '[',2)
unique(Titles)
data.combined[Titles == 'the',]
Titles[Titles %in% c('Dona.','the')] <- 'Lady.'
Titles[Titles %in% c('Ms.','Mlle.')] <- 'Miss.'
Titles[Titles %in% c('Mme.')] <- 'Mrs.'
Titles[Titles %in% c('Jonkheer.','Don.')] <- 'Sir.'
Titles[Titles %in% c('Col.','Capt.','Major.')] <- 'Officer'
table(Titles)
data.combined$new.title <- as.factor(Titles)
library(ggplot2)
ggplot(data.combined[1:891,],aes(x=new.title,fill = Survived)) +
geom_bar() +
facet_wrap(~ Pclass)
indx <- which(data.combined$new.title == 'Lady.')
data.combined$new.title[indx] <- 'Mrs.'
indx <- which(data.combined$new.title == 'Dr.' |
data.combined$new.title == 'Rev.' |
data.combined$new.title == 'Sir.' |
data.combined$new.title == 'Officer')
data.combined$new.title[indx] <- 'Mr.'
ggplot(data.combined[1:891,],aes(x=new.title,fill = Survived)) +
geom_bar() +
facet_wrap(~ Pclass)
features <- c('Pclass','new.title','Family.size')
indx <- which(data.combined$new.title == 'Mr.' & data.combined$Pclass == '1')
summary(data.combined[indx,])
frs.mr.df<-data.combined[indx,]
frs.mr.df[frs.mr.df$Sex == 'female',]
indx <- which(data.combined$new.title == 'Mr.' & data.combined$Sex == 'female')
data.combined$new.title[indx] <- 'Mrs.'
indx <- which(data.combined$new.title == 'Mr.' & data.combined$Pclass == '1')
frs.mr.df <- data.combined[indx,]
indx <- which(data.combined$Ticket == 'PC 17755' |
data.combined$Ticket == 'PC 17611' |
data.combined$Ticket == '113760'  )
View(data.combined[indx,])
ggplot(frs.mr.df,aes(x=Fare, fill = Survived)) +
geom_density(alpha = 0.5)
ticket.party.size <- rep(0,nrow(data.combined))
avg.fare <- rep(0.0,nrow(data.combined))
tickets  <- unique(data.combined$Ticket)
for (i in 1:length(tickets)){
current.ticket <- tickets[i]
party.indexes <- which(data.combined$Ticket == current.ticket)
current.avg.fare <- data.combined[party.indexes[1],'Fare']/length(party.indexes)
for (k in 1:length(party.indexes)){
ticket.party.size[party.indexes[k]] <- length(party.indexes)
avg.fare[party.indexes[k]] <- current.avg.fare
}
}
ticket.party.size <- rep(0,nrow(data.combined))
avg.fare <- rep(0.0,nrow(data.combined))
tickets  <- unique(data.combined$Ticket)
for (i in 1:length(tickets)){
current.ticket <- tickets[i]
party.indexes <- which(data.combined$Ticket == current.ticket)
current.avg.fare <- data.combined[party.indexes[1],'Fare']/length(party.indexes)
for (k in 1:length(party.indexes)){
ticket.party.size[party.indexes[k]] <- length(party.indexes)
avg.fare[party.indexes[k]] <- current.avg.fare
}
}
data.combined$ticket.party.size <- ticket.party.size
data.combined$avg.fare <- avg.fare
View(data.combined)
indx <- which(data.combined$new.title == 'Mr.' & data.combined$Pclass == '1')
frs.mr.df <- data.combined[indx,]
summary(frs.mr.df)
ggplot(frs.mr.df[frs.mr.df$Survived != "None",], aes(x=ticket.party.size, fill = Survived)) +
geom_density(alpha=0.5)
ggplot(frs.mr.df[frs.mr.df$Survived != "None",], aes(x=avg.fare, fill = Survived)) +
geom_density(alpha=0.5)
summary(data.combined$avg.fare)
data.combined[is.na(data.combined$avg.fare),]
data.combined[is.na(data.combined$avg.fare),]
data.combined[is.na(data.combined$avg.fare),]
View(data.combined[is.na(data.combined$avg.fare),])
indx <- with(data.combined, which(Pclass == '3' $ Titles == 'Mr.' & Family.size == 1 &
Ticket == '3701'))
indx <- with(data.combined, which(Pclass == '3' & Titles == 'Mr.' & Family.size == 1 &
Ticket == '3701'))
indx
similar.na.passangers <- data.combined[indx,]
summary(similar.na.passangers$avg.fare)
indx <- with(data.combined, which(Pclass == '3' & Titles == 'Mr.' & Family.size == 1 &
Ticket != '3701'))
similar.na.passangers <- data.combined[indx,]
summary(similar.na.passangers$avg.fare)
data.combined[is.na(avg.fare),'avg.fare'] <- 7.840
save.image("~/Dropbox/R-L/Kaddle/Titatnic/Analysis.RData")
?save.image
alpha
library(manipulate)
library(ggplot2)
mu0 = 30
myplot <- function(sigma,mua,n,alpha){
g = ggplot(data.frame(mu=c(27,36)),aes(x=mu))
g = g + stat_function(fun=dnorm,geon='line',
args = list(mean = mu0, sd =sigma/sqrt(n)),
size = 2, col = 'red')
g = g + stat_function(fun=dnorm,geon='line',
args = list(mean = mua, sd =sigma/sqrt(n)),
size = 2, col = 'blue')
xitc = mu0 + qnorm(1-alpha)*sigma/sqrt(n)
g=g+geom_vline(xintercept = xitc,size=3)
g
}
manipulate(myplot(sigma,mua,n,alpha),
sigma = slider(1,10,step = 1,initial = 4),
mua = slider(30,35,step = 1, initial = 32),
n=slider(1,50,step=1,initial = 16),
alpha = slider(0.01,0.1,step = 0.01,initial = 0.05))
mu0 = 30
myplot <- function(sigma,mua,n,alpha){
g = ggplot(data.frame(mu=c(27,36)),aes(x=mu))
g = g + stat_function(fun=dnorm,geom='line',
args = list(mean = mu0, sd =sigma/sqrt(n)),
size = 2, col = 'red')
g = g + stat_function(fun=dnorm,geom='line',
args = list(mean = mua, sd =sigma/sqrt(n)),
size = 2, col = 'blue')
xitc = mu0 + qnorm(1-alpha)*sigma/sqrt(n)
g=g+geom_vline(xintercept = xitc,size=3)
g
}
manipulate(myplot(sigma,mua,n,alpha),
sigma = slider(1,10,step = 1,initial = 4),
mua = slider(30,35,step = 1, initial = 32),
n=slider(1,50,step=1,initial = 16),
alpha = slider(0.01,0.1,step = 0.01,initial = 0.05))
?stat_function
?power.t.test
?t.test
power.t.test(n = 16, delta = 2, alternative = 'one.sided',sd = 4,
type = 'one.sample')
power.t.test(n=16,delta = 0.5,sd=1,alternative = 'one.sided',type = 'one.sided')
power.t.test(n=16,delta = 0.5,sd=1,alternative = 'one.sided',type = 'one.sMPLW')
power.t.test(n=16,delta = 0.5,sd=1,alternative = 'one.sided',type = 'one.sample')
power.t.test(n=16,delta = 0.5,sd=1,alternative = 'one.sided',type = 'one.sample')$power
power.t.test(power = 0.8, delta = 0.5, sd = 1, alternative = 'one.sided',type = 'one.sample')
power.t.test(power = 0.9, delta = 0.5, sd = 1, alternative = 'one.sided',type = 'one.sample')
library(swirl)
swirl()
myplot(34)
myplot(33.3)
myplot(30)
myplot(28)
z=qnorm(.95)
z<-qnorm(.95)
pnorm(q = 30+z, mean = 30, lower.tail = FALSE,sd = 1)
pnorm(q = 30+z, mean = 32, lower.tail = FALSE,sd = 1)
pnorm(q = 30+z, mean = 32, lower.tail = FALSE,sd = 1)
pnorm(q = 30+z*2, mean = 32, lower.tail = FALSE,sd = 2)
power.t.test(n = 16, delta = 2 / 4,sd=1, type = "one.sample", alt = "one.sided")$power
power.t.test(n = 16, delta = 2 ,sd=4, type = "one.sample", alt = "one.sided")$power
power.t.test(n = 16, delta = 100 ,sd=200, type = "one.sample", alt = "one.sided")$power
power.t.test(power = .8, delta = 2 / 4, sd=1, type = "one.sample", alt ="one.sided")$n
power.t.test(power = .8, delta = 2, sd=4, type = "one.sample", alt ="one.sided")$n
power.t.test(power = .8, delta = 100, sd=200, type = "one.sample", alt ="one.sided")$n
power.t.test(power = .8, n = 26, sd=1, type = "one.sample", alt ="one.sided")$delta
power.t.test(power = .8, n = 27, sd=1, type = "one.sample", alt ="one.sided")$delta
?t.test
t.test(1:10, y = c(7:20))
y <- rnorm(20)
x <- rnorm(20)
plot(x,y)
summary((lm(y~x)))
summary((lm(y~x)))$coef
? Lm
?lm
x <- y
y <- rnorm(20)
x <- y
plot(x,y)
summary((lm(y~x)))$coef
y <- rnorm(20)
x <- y
plot(x,y)
summary((lm(y~x)))$coef
library(swirl)
swirl()
head(pValues)
sum(pValues < .05)
sum(p.adjust(pValues,method = 'bonferroni') < 0.05)
sum(p.adjust(pValues,method = 'BH') < 0.05)
tail(trueStatus)
table(pValues2 < .05, trueStatus)
100
24/500
table(p.adjust(pValues2,method = 'bonferroni') < .05, trueStatus)
table(p.adjust(pValues2,method = 'BH') < .05, trueStatus)
library(UsingR)
data("father.son")
data("father.son")
x <- father.son$sheight
n<-length(x)
library(UsingR)
data("father.son")
x <- father.son$sheight
n<-length(x)
resamples <- matrix(sample(x,n*B,replace = T),B,n)
B <- 10000
resamples <- matrix(sample(x,n*B,replace = T),B,n)
resampledMedians <- apply(resamples, 1,median)
library(ggplot2)
ggplot(data = resampledMedians) +
geom_histogram()
ggplot(aes(x=resampledMedians)) +
geom_histogram()
ggplot(data=data.frame(x=resampledMedians) ,aes(x=x)) +
geom_histogram()
ggplot(data=data.frame(x=resampledMedians) ,aes(x=x)) +
geom_density()
ggplot(data=data.frame(x=resampledMedians) ,aes(x=x),filled = 'r') +
geom_density()
ggplot(data=data.frame(x=resampledMedians) ,aes(x=x)) +
geom_density(filled = 'red')
ggplot(data=data.frame(x=resampledMedians) ,aes(x=x)) +
geom_density(color='r')
ggplot(data=data.frame(x=resampledMedians) ,aes(x=x)) +
geom_density(color='red')
ggplot(data=data.frame(x=resampledMedians) ,aes(x=x)) +
geom_density()
ggplot(data=data.frame(x=resampledMedians) ,aes(x=x)) +
geom_density(width =3)
ggplot(data=data.frame(x=resampledMedians) ,aes(x=x)) +
geom_density(size =3)
?geom_density
ggplot(data=data.frame(x=resampledMedians) ,aes(x=x)) +
geom_density(size =2,fill = 'red')
ggplot(data=data.frame(x=resampledMedians) ,aes(x=x)) +
geom_density(size =2,fill = 'red') +
geom_vline(median(x))
ggplot(data=data.frame(x=resampledMedians) ,aes(x=x)) +
geom_density(size =2,fill = 'red') +
geom_vline(x=median(x))
>geom_vline
?geom_vline
ggplot(data=data.frame(x=resampledMedians) ,aes(x=x)) +
geom_density(size =2,fill = 'red') +
geom_vline(xintercept = =median(x))
ggplot(data=data.frame(x=resampledMedians) ,aes(x=x)) +
geom_density(size =2,fill = 'red') +
geom_vline(xintercept = median(x))
ggplot(data=data.frame(x=resampledMedians) ,aes(x=x)) +
geom_density(size =2,fill = 'red') +
geom_vline(xintercept = median(x),size=2)
mean(resampledMedians)
mean(resampledMedians)-median(x)
ggplot(data=data.frame(x=resampledMedians) ,aes(x=x)) +
geom_density(size =2,fill = 'lightblue') +
geom_vline(xintercept = median(x),size=2)
ggplot(data=data.frame(x=resampledMedians) ,aes(x=x)) +
geom_histogram(fill = 'lightblue') +
geom_vline(xintercept = median(x),size=2)
ggplot(data=data.frame(x=resampledMedians) ,aes(x=x)) +
geom_histogram(color='black', fill = 'lightblue') +
geom_vline(xintercept = median(x),size=2)
ggplot(data=data.frame(x=resampledMedians) ,aes(x=x)) +
geom_histogram(color='black', fill = 'lightblue') +
geom_vline(xintercept = median(x),size=2,color='red')
ggplot(data=data.frame(x=resampledMedians) ,aes(x=x)) +
geom_histogram(color='black', fill = 'lightblue') +
geom_vline(xintercept = median(x),size=1,color='red')
ggplot(data=data.frame(x=resampledMedians) ,aes(x=x)) +
geom_histogram(color='black', fill = 'lightblue') +
geom_vline(xintercept = median(x),size=1,color='red',binwidth=0.05)
ggplot(data=data.frame(x=resampledMedians) ,aes(x=x)) +
geom_histogram(color='black', fill = 'lightblue') +
geom_vline(xintercept = median(x),size=1,color='red',width=0.05)
ggplot(data=data.frame(x=resampledMedians) ,aes(x=x)) +
geom_histogram(color='black', fill = 'lightblue') +
geom_vline(xintercept = median(x),size=1,color='red',binswidth=0.05)
ggplot(data=data.frame(x=resampledMedians) ,aes(x=x)) +
geom_histogram(color='black', fill = 'lightblue') +
geom_vline(xintercept = median(x),size=1,color='red',bins=0.05)
ggplot(data=data.frame(x=resampledMedians) ,aes(x=x)) +
geom_histogram(color='black', fill = 'lightblue',binwidth = 0.05) +
geom_vline(xintercept = median(x),size=1,color='red')
ggplot(data=data.frame(x=resampledMedians) ,aes(x=x)) +
geom_histogram(color='black', fill = 'lightblue',binwidth = 0.05) +
geom_vline(xintercept = median(x),size=1,color='red') +
xlab(xx)
ggplot(data=data.frame(x=resampledMedians) ,aes(x=x)) +
geom_histogram(color='black', fill = 'lightblue',binwidth = 0.05) +
geom_vline(xintercept = median(x),size=1,color='red') +
xlab('xx')
?mapply
rep(1,4)
mapply(rep, 1:4,1:4)
mapply(rep, 1:4,4:1)
noise <- function(n,mean,sd){
rnorm(n,mean,sd)
}
mapply(noise,1:5,2:3,3)
mapply(noise,1:5,1:5,3)
getwd()
list.files()
list.files(include.dirs = )
setwd('Dropbox/Proggraming Studies/R-L/GettingAndCleaningData/')
open.srcfile('Quiz2.R')

summary((lm(y~x)))$coef
library(swirl)
swirl()
head(pValues)
sum(pValues < .05)
sum(p.adjust(pValues,method = 'bonferroni') < 0.05)
sum(p.adjust(pValues,method = 'BH') < 0.05)
tail(trueStatus)
table(pValues2 < .05, trueStatus)
100
24/500
table(p.adjust(pValues2,method = 'bonferroni') < .05, trueStatus)
table(p.adjust(pValues2,method = 'BH') < .05, trueStatus)
library(UsingR)
data("father.son")
data("father.son")
x <- father.son$sheight
n<-length(x)
library(UsingR)
data("father.son")
x <- father.son$sheight
n<-length(x)
resamples <- matrix(sample(x,n*B,replace = T),B,n)
B <- 10000
resamples <- matrix(sample(x,n*B,replace = T),B,n)
resampledMedians <- apply(resamples, 1,median)
library(ggplot2)
ggplot(data = resampledMedians) +
geom_histogram()
ggplot(aes(x=resampledMedians)) +
geom_histogram()
ggplot(data=data.frame(x=resampledMedians) ,aes(x=x)) +
geom_histogram()
ggplot(data=data.frame(x=resampledMedians) ,aes(x=x)) +
geom_density()
ggplot(data=data.frame(x=resampledMedians) ,aes(x=x),filled = 'r') +
geom_density()
ggplot(data=data.frame(x=resampledMedians) ,aes(x=x)) +
geom_density(filled = 'red')
ggplot(data=data.frame(x=resampledMedians) ,aes(x=x)) +
geom_density(color='r')
ggplot(data=data.frame(x=resampledMedians) ,aes(x=x)) +
geom_density(color='red')
ggplot(data=data.frame(x=resampledMedians) ,aes(x=x)) +
geom_density()
ggplot(data=data.frame(x=resampledMedians) ,aes(x=x)) +
geom_density(width =3)
ggplot(data=data.frame(x=resampledMedians) ,aes(x=x)) +
geom_density(size =3)
?geom_density
ggplot(data=data.frame(x=resampledMedians) ,aes(x=x)) +
geom_density(size =2,fill = 'red')
ggplot(data=data.frame(x=resampledMedians) ,aes(x=x)) +
geom_density(size =2,fill = 'red') +
geom_vline(median(x))
ggplot(data=data.frame(x=resampledMedians) ,aes(x=x)) +
geom_density(size =2,fill = 'red') +
geom_vline(x=median(x))
>geom_vline
?geom_vline
ggplot(data=data.frame(x=resampledMedians) ,aes(x=x)) +
geom_density(size =2,fill = 'red') +
geom_vline(xintercept = =median(x))
ggplot(data=data.frame(x=resampledMedians) ,aes(x=x)) +
geom_density(size =2,fill = 'red') +
geom_vline(xintercept = median(x))
ggplot(data=data.frame(x=resampledMedians) ,aes(x=x)) +
geom_density(size =2,fill = 'red') +
geom_vline(xintercept = median(x),size=2)
mean(resampledMedians)
mean(resampledMedians)-median(x)
ggplot(data=data.frame(x=resampledMedians) ,aes(x=x)) +
geom_density(size =2,fill = 'lightblue') +
geom_vline(xintercept = median(x),size=2)
ggplot(data=data.frame(x=resampledMedians) ,aes(x=x)) +
geom_histogram(fill = 'lightblue') +
geom_vline(xintercept = median(x),size=2)
ggplot(data=data.frame(x=resampledMedians) ,aes(x=x)) +
geom_histogram(color='black', fill = 'lightblue') +
geom_vline(xintercept = median(x),size=2)
ggplot(data=data.frame(x=resampledMedians) ,aes(x=x)) +
geom_histogram(color='black', fill = 'lightblue') +
geom_vline(xintercept = median(x),size=2,color='red')
ggplot(data=data.frame(x=resampledMedians) ,aes(x=x)) +
geom_histogram(color='black', fill = 'lightblue') +
geom_vline(xintercept = median(x),size=1,color='red')
ggplot(data=data.frame(x=resampledMedians) ,aes(x=x)) +
geom_histogram(color='black', fill = 'lightblue') +
geom_vline(xintercept = median(x),size=1,color='red',binwidth=0.05)
ggplot(data=data.frame(x=resampledMedians) ,aes(x=x)) +
geom_histogram(color='black', fill = 'lightblue') +
geom_vline(xintercept = median(x),size=1,color='red',width=0.05)
ggplot(data=data.frame(x=resampledMedians) ,aes(x=x)) +
geom_histogram(color='black', fill = 'lightblue') +
geom_vline(xintercept = median(x),size=1,color='red',binswidth=0.05)
ggplot(data=data.frame(x=resampledMedians) ,aes(x=x)) +
geom_histogram(color='black', fill = 'lightblue') +
geom_vline(xintercept = median(x),size=1,color='red',bins=0.05)
ggplot(data=data.frame(x=resampledMedians) ,aes(x=x)) +
geom_histogram(color='black', fill = 'lightblue',binwidth = 0.05) +
geom_vline(xintercept = median(x),size=1,color='red')
ggplot(data=data.frame(x=resampledMedians) ,aes(x=x)) +
geom_histogram(color='black', fill = 'lightblue',binwidth = 0.05) +
geom_vline(xintercept = median(x),size=1,color='red') +
xlab(xx)
ggplot(data=data.frame(x=resampledMedians) ,aes(x=x)) +
geom_histogram(color='black', fill = 'lightblue',binwidth = 0.05) +
geom_vline(xintercept = median(x),size=1,color='red') +
xlab('xx')
?mapply
rep(1,4)
mapply(rep, 1:4,1:4)
mapply(rep, 1:4,4:1)
noise <- function(n,mean,sd){
rnorm(n,mean,sd)
}
mapply(noise,1:5,2:3,3)
mapply(noise,1:5,1:5,3)
date()
d1=date()
print(d1)
class(d1)
d2 = Sys.Date()
d2
class(d2)
format(d2,"%a %b %d")
?format
x<-c("1jan1960","2jan1960"); z=as.Date(x,"%d%b%Y")
z
weekdays(d2)
months(d2)
julian(d2)
install.packages("lubridate")
library(lubridate)
ymd('20140108')
mdy('08042013')
mdy('08/04/2013')
dmy('05/05/2065')
ymd_hms(20160405205634)
date()
Sys.Date()
?Devices
pdf(file="myplot.pdf")
with(faithful,plot(eruptions,waiting))
title(main='Old Faithful Geyser data')
dev.off()
list.files()
file.edit('myplot.pdf')
library(swirl)
swirl()
pal <- colorRampPalette(cols)
showMe(pal(20))
image(volcano)
image(volcano,col=pal(20))
image(volcano,col=p1(20))
volcano
vol <- volcano
str(volcano)
class(volcano)
unique(vol)
?unique
dim(volcano)
dim(unique(volcano))
image(volcano)
class(p1(20))
p1(20)
class(p1(20),col=p1(20))
image(volcano,col=p1(20))
image(volcano,col=p1(10))
image(volcano,col=p1(1))
image(volcano,col=p1(2))
image(volcano,col=p1(4))
image(volcano,col=p1(40))
image(volcano,col=p1(100))
image(volcano,col=p2(100))
image(volcano,col=pal(100))
image(volcano,col=pal(1000))
image(volcano,col=pal(100))
image(volcano,col=pal(50))
image(volcano,col=pal(20))
image(volcano,col=pal(200))
palet <- p1(20)
palet
library(swirl)
swirl()
str(mpg)
qplot(displ,hwy,mpg)
qplot(displ,hwy,data =  mpg)
qplot(displ,hwy,data =  mpg,aes(color=drv))
qplot(displ,hwy,data =  mpg,color=drv)
qplot(displ,hwy,data =  mpg,color=drv,geom=c('point','smooth'))
qplot(hwy,data =  mpg,color=drv)
qplot(y=hwy,data =  mpg,color=drv)
myhigh
qplot(drv,hwy, data =  mpg,geom='boxplot')
qplot(drv,hwy, data =  mpg,geom='boxplot',color=manufacturer)
qplot(hwy,data = mpg,fill=drv)
qplot(displt,hwy, data=mpg,factes = .~drv)
qplot(displt,hwy, data=mpg,facets = .~drv)
qplot(displ,hwy, data=mpg,facets = .~drv)
qplot(hwy,data = mpg,facets = drv~.,binwidth=2)
qplot(displ,hwy,data = mpg,geom=c('point','smooth'),facets = .~drv)
g<-ggplot(mpg,aes(displ,hwy))
summary(g)
g+geom_point()
g+geom_point()+geom_smooth()
g+geom_point()+geom_smooth(method = 'lm')
g+geom_point()+geom_smooth(method = 'lm')+facet_grid(.~drv)
g+geom_point()+geom_smooth(method = 'lm')+facet_grid(.~drv)+ggtitle("Swirl Rules!")
g+geom_point()
g+geom_point(color='pink',size=4,alpha=1/2)
g+geom_point(size=4,alpha=1/2,aes(color=drv))
g+geom_point(size=4,alpha=1/2,aes(color=drv))+labs(title='Swirl Rules!')+labs(x='Displacement',y='Hwy Mileage')
g+geom_point(aes(color=drv))+labs(title='Swirl Rules!')+labs(x='Displacement',y='Hwy Mileage')
g+geom_point(aes(color=drv),size=2alpha=1/2) + geom_smooth(size=4,linetype=3,method='lm',se=FALSE)
g+geom_point(aes(color=drv),size=,alpha=1/2) + geom_smooth(size=4,linetype=3,method='lm',se=FALSE)
g+geom_point(aes(color=drv),size=2,alpha=1/2) + geom_smooth(size=4,linetype=3,method='lm',se=FALSE)
g+geom_point(aes(color=drv))+theme_bw(base_family = "Times")
plot(myx,myy,type = 'l',ylim = c(-3,3))
g<-ggplot(testdat,aes(x=myx,y=myy))
g+geom_line()
g+geom_line()+ylim(-3,3)
g+geom_line()+coord_cartesian(ylim = c(-3,3))
g<-ggplot(mpg,aes(x=displ,y=hwy),color=factor(yesr))
g<-ggplot(mpg,aes(x=displ,y=hwy,color=factor(yesr)))
g<-ggplot(mpg,aes(x=displ,y=hwy,color=factor(year)))
g+geom_point()
g+geom_point()+facet_grid(drv~cyl,margins = TRUE)
g+geom_point()+facet_grid(drv~cyl,margins = TRUE)+geom_smooth(method = 'lm',se=FALSE,size=2,color='black')
g+geom_point()+facet_grid(drv~cyl,margins = TRUE)+geom_smooth(method = 'lm',se=FALSE,size=2,color='black')+labs(x='Displacement',y='Highway Mileage',title='Swirl Rules!')
library(swirl)
swirl()
str(diamonds)
qplot(price,data = diamonds)
range(diamonds$price)
qplot(price,data = diamonds,binwidth = 18497/30)
brk
counts
qplot(price,data = diamonds,binwidth = 18497/30,fill = cut)
qplot(price,data = diamonds,geom='density')
qplot(price,data = diamonds,geom='density',color='cut')
qplot(price,data = diamonds,geom='density',color=cut)
qplot(carat,price,data = diamonds)
qplot(carat,price,data = diamonds,shape=cut)
qplot(carat,price,data = diamonds,color=cut)
qplot(carat,price,data = diamonds,color=cut)+geom_smooth(method='lm')
qplot(carat,price,data = diamonds,color=cut,facets = .~cut)+geom_smooth(method='lm')
g<-ggplot(data = diamonds,aes(x=depth,y=price))
summary(g)
g+geom_point(alpha=1/3)
cutpoints <- quantile(diamonds$carat,seq(0,1,length.out = 4),na.rm = TRUE)
cutpoints
diamonds$car2 <- cut(diamonds$carat,breaks = cutpoints)
g<-ggplot(data = diamonds,aes(x=depth,y=price))
g+geom_point(alpha=1/3)+facet_grid(cut ~ car2)
diamonds[myd,]
g+geom_point(alpha=1/3)+facet_grid(cut ~ car2)+geom_smooth(method='lm',size=3,color='pink')
ggplot(diamonds,aes(carat,price)) + geom_boxplot() + facet_grid(.~cut)
ggplot(diamonds,aes(carat,price)) + geom_boxplot() + facet_grid(.~cut)
ggplot(diamonds,aes(carat,price,color='red')) + geom_boxplot() + facet_grid(.~cut)
ggplot(diamonds,aes(carat,price,color='red',fill='green')) + geom_boxplot() + facet_grid(.~cut)
ggplot(diamonds,aes(carat,price)) + geom_boxplot(color='green') + facet_grid(.~cut)
ggplot(diamonds,aes(carat,price)) + geom_boxplot(fill='green') + facet_grid(.~cut)
version
install.packages('rmarkdown')
setwd('Dropbox/Proggraming Studies/R-L/')
install.packages("leaflet")
install.packages("dplyr")
library(leaflet)
library(dplyr)
# Chunk 1
library(leaflet)
library(dplyr)
# Chunk 2
leaflet()
install.packages("KernSmooth")
library(KernSmooth)
x<-rnorm(20)
hist(x)
y<-sample(x,1000,replace = TRUE)
hist(y)
mean(x)
mean(y)
sd(x)
sd(y)
library(UsingR)
data("father.son")
x<-father.son$sheight
n<-1000
n<-length(x)
B=1000
resamples <- matrix(sample(x,size = n*B,replace = T),nrow = B,ncol = n)
n
resamplesMedian <- apply(resamples,MARGIN = 1,FUN = median)
hist(resamplesMedian)
density(resamplesMedian)
plot(density(resamplesMedian))
library(ggplot2)
g<-ggplot(data.frame(medians=resamplesMedian),aes(x=medians))
g+geom_histogram()
g<-ggplot(data.frame(medians=resamplesMedian),aes(x=medians))
g+geom_histogram(binwidth = 0.2)
g+geom_histogram(binwidth = 0.1)
g+geom_histogram(binwidth = 0.05)
g+geom_histogram(binwidth = 0.05,col='black')
g+geom_histogram(binwidth = 0.05,col='black',fill='lightblues')
g+geom_histogram(binwidth = 0.05,col='black',fill='lightblue')
subdata <- InsectSprays[InsectSprays$spray %in% c('B','C')]
subdata <- InsectSprays[InsectSprays$spray %in% c('B','C'),]
y<-subdata$count
group <- as.character(subdata$spray)
testStat <- function(w,g) mean(w[g=='B']) - mean(w[g=='C'])
observedStat <- testStat(y,group)
permutations <- sapply(1:10000,function(i) testStat(y,sample(group)))
observedStat
mean(permutations>observedStat)
g<-ggplot(data.frame(permutations=permutations),aes(x=permutations))
g+geom_histogram(binwidth = 0.05,col='black',fill='lightblue')
g+geom_histogram(binwidth = 1,col='black',fill='lightblue')
g+geom_histogram(binwidth = 1,col='black',fill='lightblue') + geom_vline(xintercept = observedStat)
g+geom_histogram(binwidth = 1,col='black',fill='lightblue') + geom_vline(xintercept = observedStat,lw=2)
g+geom_histogram(binwidth = 1,col='black',fill='lightblue') + geom_vline(xintercept = observedStat,width=2)
g+geom_histogram(binwidth = 1,col='black',fill='lightblue') + geom_vline(xintercept = observedStat)
reset
rm(list = ls())
b<-c(140,138,150,148,135)
w2<-c(132,135,151,146,130)
t.test(x=b,y=w2,paired = TRUE)
t.test(x=b,y=w2,paired = TRUE,var.equal = TRUE)
n<-9
mu0<-1100
sd0<-30
mu0 +c(-1,1)*qt(p = .95,df = n-1)*sqrt(sd)/sqrt(n)
mu0 +c(-1,1)*qt(p = .95,df = n-1)*sqrt(sd0)/sqrt(n)
mu0 +c(-1,1)*qt(p = .975,df = n-1)*sqrt(sd0)/sqrt(n)
mu0 +c(-1,1)*qt(p = .975,df = n-1)*sd0/sqrt(n)
?pbinom
pbinom(3,4)
pbinom(3,4,prob = 0.5)
pnorm(2)
pbinom(q = 3,size = 1,n=4,prob = 0.5)
pbinom(q = 3,size = 4,prob = 0.5)
pbinom(q = 4,size = 4,prob = 0.5)
pbinom(q = 1,size = 4,prob = 0.5)
pbinom(q = 0,size = 4,prob = 0.5)
4*(1/2)^4
choose(3,4)
choose(4,3)
choose(4,3)*(1/2)^4
choose(4,3)*(1/2)^3
pbinom(q = 0,size = 4,prob = 0.5,lower.tail = F)
pbinom(q = 3,size = 4,prob = 0.5,lower.tail = F)
(1/2)^4
?ppois
ppois(10/1787,0.1,lower.tail = FALSE)
ppois(10/1787,0.1,lower.tail = T)
ppois(10/1787*100-1,1,lower.tail = T)
ppois(10/1787*100-1,1)
ppois(10-1,0.01*1787,lower.tail = T)
ppois(10,0.01*1787,lower.tail = T)
ppois(9,0.01*1787,lower.tail = T)
ppois(11,0.01*1787,lower.tail = T)
ppois(10,0.01*1787,lower.tail = T)
-3-1+c(-1,1)*qt(p=.975,df = 9+9-2)*sqrt((1.5^2+1.8^2)/2)*sqrt(2/9)
?t.test
c(-1,1)*qt(p=.975,df = 9+9-2)*sqrt((1.5^2+1.8^2)/2)*sqrt(2/9)
se<-sqrt((1.5^2+1.8^2)/2)*sqrt(2/9)
se
pnorm(-4,mean = 0,sd = se^2,lower.tail = T)
4-qt(p=.975,df = 9+9-2)*sqrt((1.5^2+1.8^2)/2)*sqrt(2/9)
4-qt(p=.8,df = 9+9-2)*sqrt((1.5^2+1.8^2)/2)*sqrt(2/9)
4-qt(p=.97,df = 9+9-2)*sqrt((1.5^2+1.8^2)/2)*sqrt(2/9)
4-qt(p=.99,df = 9+9-2)*sqrt((1.5^2+1.8^2)/2)*sqrt(2/9)
4-qt(p=.99,df = 9+9-2,lower.tail = T)*sqrt((1.5^2+1.8^2)/2)*sqrt(2/9)
(1077+1123)/2
mu0=(1077+1123)/2
1123-mu0
se0=23/qt(.9,df = 8)
se0
se0=23/qt(.95,df = 8)
se0
mu0+c(-1,1)*qt(.975,df = 8)*se0
mu0+c(-1,1)*qt(.95,df = 8)*se0
mu0+c(-1,1)*qt(.975,df = 8)*se0
?power.t.test
power.t.test(n=100,delta = .01,sd=.04,type = "one.sample",alt = "one.sided")
power.t.test(delta = .01,sd=.04,type = "one.sample",alt = "one.sided",power=0.9)
pbinom(q = 3,size = 4,prob = 0.5,lower.tail = F)
pbinom(q = 3,size = 4,prob = 0.5,lower.tail = T)
pbinom(q = 2,size = 4,prob = 0.5,lower.tail = F)
4*(1/2)^4
4*(1/2)^4+(1/2)^4
R.Version()
library(plotly)
data("mtcars")
plot_ly(mtcars,x=wt,y=mpg,mode='markers')
install.packages("plotly")
install.packages("plotly")
library(plotly)
data("mtcars")
plot_ly(mtcars,x=wt,y=mpg,mode='markers')
View(mtcars)
?plot_ly
plot_ly(mtcars,x=~wt,y=~mpg,mode='markers')
plot_ly(mtcars,x=~wt,y=~mpg)
plot_ly(mtcars,x=~wt,y=~mpg,mode='marker')
plot_ly(mtcars,x=~wt,y=~mpg,mode='marker',color = as.factor(cyl))
plot_ly(mtcars,x=~wt,y=~mpg,mode='marker',color = as.factor(~cyl))
plot_ly(mtcars,x=~wt,y=~mpg,mode='marker',color = as.factor(cyl))
plot_ly(mtcars,x=~wt,y=~mpg,mode='marker',color = ~cyl
plot_ly(mtcars,x=~wt,y=~mpg,mode='marker',color = ~cyl)
plot_ly(mtcars,x=~wt,y=~mpg,mode='marker',color = ~cyl)
plot_ly(mtcars,x=~wt,y=~mpg,mode='marker',color = factor(~cyl))
mtcars$cyl <- as.factor(mtcars$cyl)
plot_ly(mtcars,x=~wt,y=~mpg,mode='marker',color = ~cyl)
plot_ly(mtcars,x=~wt,y=~mpg,mode='marker',color = ~cyl,size=~hp)
plot_ly(mtcars,x=~wt,y=~mpg,mode='marker',color = ~cyl,size=hp)
plot_ly(mtcars,x=~wt,y=~mpg,color = ~cyl,size=~hp,mode='markers')
temp <- rnorm(100,mean = 30,sd=5)
pressue <- rnorm(100)
dtime <- 1:100
plot_ly(x=temp,y=pressue)
plot_ly(x=temp,y=pressue,z=dtime)
plot_ly(x=temp,y=pressue,z=dtime,type = 'scatter3d')
plot_ly(x=temp,y=pressue,z=dtime,type = 'scatter3d',mode='markers')
plot_ly(x=temp,y=pressue,z=dtime,type = 'scatter3d',mode='markers',color=temp)
data("airmiles")
head(airmiles)
airmiles
plot_ly(x=time(airmiles),y=airmiles)
class(airmiles)
plot_ly(x=time(airmiles),y=airmiles,mode='lines')
library(tidyr)
library(dplyr)
data("EuStockMarkets")
?gather
stocks <- as.data.frame(EuStockMarkets) %>% gather(index,price) %>%
mutate(time=rep(time(EuStockMarkets),4))
View(stocks)
as.data.frame(EuStockMarkets)
head(as.data.frame(EuStockMarkets))
names(as.data.frame(EuStockMarkets))
df <- as.data.frame(EuStockMarkets)
attributes(df)
df[index]
index(df)
time(EuStockMarkets)
plot_ly(stocks,x=time,y=price)
stocks <- as.data.frame(EuStockMarkets) %>% gather(index,price) %>%
mutate(time=rep(time(EuStockMarkets),4))
plot_ly(stocks,x=time,y=price)
plot_ly(stocks,x=time,y=stocks$price)
data("EuStockMarkets")
stocks <- as.data.frame(EuStockMarkets) %>% gather(index,price) %>%
mutate(time=rep(time(EuStockMarkets),4))
View(stocks)
plot_ly(stocks,x=time,y=price)
plot_ly(stocks,x=~time,y=~price)
plot_ly(stocks,x=~time,y=~price,color=~index)
plot_ly(x=precip,type='histogram')
plot_ly(iris,y=~Petal.length,color=~Species)
plot_ly(iris,y=~Petal.Length,color=~Species)
plot_ly(iris,y=~Petal.Length,color=~Species,type='box')
terrain1 <- matrix(rnorm(100*100),nrow = 100,ncol = 100)
plot_ly(z=terrain1,type='heatmap')
plot_ly(z=terrain1,type='surface')
terrain1 <- matrix(sort(rnorm(100*100)),nrow = 100,ncol = 100)
plot_ly(z=terrain1,type='surface')
state_pop <- data.frame(State=state.abb, Pop = as.vector(state.x77[,1]))
View(state_pop)
state_pop$hover <- with(state_pop,paste(State,'<br>','Population:',Pop))
bprders <- list(color=toRGB('red'))
borders <- list(color=toRGB('red'))
borders
map_options <- list(scope='usa',
projection = list(type='albers usa'),
showlakes =TRUE,
lakecolor = toRGB('white'))
plot_ly(state_pop)
plot_ly(state_pop,z=Pop)
plot_ly(state_pop,z=~Pop)
plot_ly(state_pop,z=~Pop,text=hover)
plot_ly(state_pop,z=~Pop,text=~hover)
plot_ly(state_pop,z=~Pop,text=~hover,locations=~State,type='choropleth',
locationmode = 'USA-states',color=~Pop)
plot_ly(state_pop,z=~Pop,text=~hover,locations=~State,type='choropleth',
locationmode = 'USA-states',color=~Pop,colors='Blues')
plot_ly(state_pop,z=~Pop,text=~hover,locations=~State,type='choropleth',
locationmode = 'USA-states',color=~Pop,colors='Blues',marker=list(line=borders))
layout(title='US Population in 1975',geo=map_options)
plot_ly(state_pop,z=~Pop,text=~hover,locations=~State,type='choropleth',
locationmode = 'USA-states',color=~Pop,colors='Blues',marker=list(line=borders)) %>%
layout(title='US Population in 1975',geo=map_options)
d <- diamonds[sample(nrow(diamonds),1000),]
p <- ggplot(data=d,aes(x=carat,y=price)) +
geom_point(aes(text=paste('Clarity:',clarity)),size=4)
p
p <- ggplot(data=d,aes(x=carat,y=price)) +
geom_point(aes(text=paste('Clarity:',clarity)),size=4) +
geom_smooth(aes(colour=cut,fill=cut))
p
p <- ggplot(data=d,aes(x=carat,y=price)) +
geom_point(aes(text=paste('Clarity:',clarity)),size=4) +
geom_smooth(aes(colour=cut,fill=cut))+facet_wrap(~cut)
p
gg <- ggplotly(p)
gg
plotly_POST(gg)
getwd()
setwd('Develp_Rproduct/Project3/')
shiny::runApp()
runApp()
